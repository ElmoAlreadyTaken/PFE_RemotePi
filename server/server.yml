swagger: "2.0"
info:
  title: Robot Management API
  description: API for managing robots with various functionalities.
  version: "1.0.0"
host: "localhost:5000"
basePath: "/"
schemes:
- "http"

paths:
  /upload:
    post:
      summary: "Uploads a file and commits it to the git repo"
      description: "Uploads a file to the server and commits it to the git repository."
      responses:
        200:
          description: "File uploaded and committed successfully"

  /register:
    post:
      summary: "Create and register a new robot"
      description: "Creates a new robot based on the specified board type and registers it."
      parameters:
      - in: "body"
        name: "board"
        required: true
        schema:
          type: "object"
          properties:
            board:
              type: "string"
      responses:
        200:
          description: "Robot created and registered successfully"
        400:
          description: "Error in creating robot. Invalid board type."

  /unregister:
    post:
      summary: "Unregister an existing robot"
      description: "Unregisters a robot given its ID."
      parameters:
      - in: "body"
        name: "id"
        required: true
        schema:
          type: "object"
          properties:
            id:
              type: "integer"
      responses:
        200:
          description: "Robot unregistered successfully"
        404:
          description: "Robot not found"

  /robots:
    get:
      summary: "List all robots"
      description: "Returns a list of all robots currently known to the system."
      responses:
        200:
          description: "List of all robots"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Robot"

  /robots/{robot_id}:
    get:
      summary: "Get robot information"
      description: "Returns the information of a robot given its ID."
      parameters:
      - name: "robot_id"
        in: "path"
        required: true
        type: "integer"
      responses:
        200:
          description: "Robot information"
          schema:
            $ref: "#/definitions/Robot"
        404:
          description: "Robot not found"

  /robots/free/:
    get:
      summary: "List all free robots"
      description: "Returns a list of all free robots. Optionally filters by board type as a query parameter."
      parameters:
      - name: "board"
        in: "query"
        required: false
        type: "string"
        description: "Board type to filter free robots"
      responses:
        200:
          description: "List of free robots"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Robot"
        400:
          description: "Invalid board type provided"
          
  /robots/{robot_id}/status:
    get:
      summary: "Get robot status"
      description: "Returns the status of a robot given its ID."
      parameters:
      - name: "robot_id"
        in: "path"
        required: true
        type: "integer"
      responses:
        200:
          description: "Robot status"
          schema:
            type: "string"
        404:
          description: "Robot not found"

  /free/{robot_id}:
    post:
      summary: "Free a robot"
      description: "Frees a robot given its ID."
      parameters:
      - name: "robot_id"
        in: "path"
        required: true
        type: "integer"
      responses:
        200:
          description: "Robot freed successfully"
        404:
          description: "Robot not found"

  /reserve/{robot_id}:
    post:
      summary: "Reserve a robot"
      description: "Reserves a robot given its ID."
      parameters:
      - name: "robot_id"
        in: "path"
        required: true
        type: "integer"
      responses:
        200:
          description: "Robot reserved successfully"
        404:
          description: "Robot not found"

definitions:
  Robot:
    type: "object"
    properties:
      id:
        type: "integer"
      status:
        type: "string"
      board:
        type: "string"
